<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.example</groupId>
    <artifactId>spring-boot</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>spring-boot</name>
    <description>Demo project for Spring Boot</description>
    <properties>
        <java.version>11</java.version>
<!--        <java.version>1.8</java.version>-->
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.1.3</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.7.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.7.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.18</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.5.5</version>
        </dependency>
        <dependency>
            <groupId>org.sonatype.sisu</groupId>
            <artifactId>sisu-inject-bean</artifactId>
            <version>1.4.2</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>3.6.28</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--            用于单元测试-->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <excludes>
                        <!--                        以 IntegrationTest 结尾的测试代码不属于单元测试-->
                        <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>integration-test</phase>
                        <configuration>
                            <excludes>
                                <exclude>none</exclude>
                            </excludes>
                            <includes>
                                <!--                        以 IntegrationTest 结尾的测试代码属于集成测试-->
                                <include>**/*IntegrationTest.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--            用于持续集成-->
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>

                    <!--                    用docker启动mysql-->
                    <execution>
                        <id>docker-run-mysql</id>
                        <!--                        该插件绑定到哪个阶段-->
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <!--                    可执行程序-->
                            <executable>
                                sudo
                            </executable>
                            <!--                    运行命令的参数-->
                            <arguments>
                                <argument>docker</argument>
                                <argument>run</argument>
                                <argument>-d</argument>
                                <argument>--name</argument>
                                <argument>my-test-mysql</argument>
                                <argument>-e</argument>
                                <argument>MYSQL_ROOT_PASSWORD=123456</argument>
                                <argument>-e</argument>
                                <argument>MYSQL_DATABASE=xdml</argument>
                                <argument>-p</argument>
                                <argument>3307:3306</argument>
                                <argument>mysql:8.0.23</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <!--                    等待 mysql 启动完成(否则后续flyway无法连接成功)-->
                    <execution>
                        <id>wait-mysql-finish</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>
                                sleep
                            </executable>
                            <arguments>
                                <argument>30</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <!--                    销毁 docker 运行的 mysql-->
                    <execution>
                        <id>teardown-mysql</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <!--                    可执行程序-->
                            <executable>
                                sudo
                            </executable>
                            <!--                    运行命令的参数-->
                            <arguments>
                                <argument>docker</argument>
                                <argument>rm</argument>
                                <argument>-f</argument>
                                <argument>my-test-mysql</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--  plugin 执行的顺序根据 pom.xml 中 plugin 标签摆放的先后顺序决定,-->
            <!--  因此我把 flyway 插件放最下面,-->
            <!--  是为了让上一个 exec 插件中同样在 pre-integration-test 阶段要执行的任务(用 docker 创建数据库)先执行,-->
            <!--  再执行下面对数据库数据初始化的任务-->
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>7.8.1</version>
                <configuration>
                    <url>jdbc:mysql://localhost:3306/xdml</url>
                    <user>root</user>
                    <password>123456</password>
                </configuration>
                <executions>
                    <!--                    pre-integration-test 阶段对 mysql 数据初始化-->
                    <execution>
                        <id>mysql-setup</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>migrate</goal>
                        </goals>

                        <configuration>
                            <url>jdbc:mysql://localhost:3307/xdml</url>
                            <user>root</user>
                            <password>123456</password>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
